#pragma once
#include "sys/types.h"

#define CGIA_COLORS_UNIQUE (32)
#define CGIA_COLORS_LEVELS (8)
#define CGIA_COLORS_NUM    (CGIA_COLORS_UNIQUE * CGIA_COLORS_LEVELS)

#ifndef __cplusplus
#define CGIA_PALETTE_BITS 8
_Static_assert(CGIA_COLORS_NUM == 1 << CGIA_PALETTE_BITS, "Incorrect CGIA_PALETTE_BITS");
#endif

extern uint32_t cgia_rgb_palette[CGIA_COLORS_NUM];

#ifdef CGIA_PALETTE_IMPL
/** RGBA8888 generated using script (see colors.html) */
uint32_t cgia_rgb_palette[CGIA_COLORS_NUM] = {
    0x00000000, 0x00242424, 0x00494949, 0x006d6d6d, 0x00929292, 0x00b6b6b6, 0x00dbdbdb, 0x00ffffff, //
    0x00050544, 0x000e0e6f, 0x0026268b, 0x004545a0, 0x005f5fba, 0x007474d9, 0x009090f1, 0x00bbbbfa, //
    0x00051144, 0x000e216f, 0x00263a8b, 0x004556a0, 0x005f70ba, 0x007488d9, 0x0090a3f1, 0x00bbc7fa, //
    0x00051d44, 0x000e336f, 0x00264d8b, 0x004568a0, 0x005f82ba, 0x00749bd9, 0x0090b6f1, 0x00bbd3fa, //
    0x00052a44, 0x000e466f, 0x0026618b, 0x00457aa0, 0x005f94ba, 0x0074afd9, 0x0090c8f1, 0x00bbe0fa, //
    0x00053644, 0x000e596f, 0x0026748b, 0x00458ca0, 0x005fa6ba, 0x0074c2d9, 0x0090dbf1, 0x00bbecfa, //
    0x00054244, 0x000e6c6f, 0x0026888b, 0x00459da0, 0x005fb7ba, 0x0074d6d9, 0x0090eef1, 0x00bbf8fa, //
    0x0005443a, 0x000e6f5f, 0x00268b7b, 0x0045a091, 0x005fbaac, 0x0074d9c9, 0x0090f1e2, 0x00bbfaf0, //
    0x0005442e, 0x000e6f4d, 0x00268b67, 0x0045a080, 0x005fba9a, 0x0074d9b5, 0x0090f1cf, 0x00bbfae4, //
    0x00054421, 0x000e6f3a, 0x00268b54, 0x0045a06e, 0x005fba88, 0x0074d9a2, 0x0090f1bc, 0x00bbfad7, //
    0x00054415, 0x000e6f27, 0x00268b40, 0x0045a05c, 0x005fba76, 0x0074d98e, 0x0090f1a9, 0x00bbfacb, //
    0x00054409, 0x000e6f14, 0x00268b2d, 0x0045a04b, 0x005fba65, 0x0074d97b, 0x0090f196, 0x00bbfabf, //
    0x000d4405, 0x001a6f0e, 0x00338b26, 0x0051a045, 0x006bba5f, 0x0081d974, 0x009cf190, 0x00c3fabb, //
    0x00194405, 0x002d6f0e, 0x00478b26, 0x0062a045, 0x007cba5f, 0x0095d974, 0x00aff190, 0x00cffabb, //
    0x00254405, 0x00406f0e, 0x005a8b26, 0x0074a045, 0x008eba5f, 0x00a8d974, 0x00c2f190, 0x00dcfabb, //
    0x00324405, 0x00536f0e, 0x006e8b26, 0x0086a045, 0x00a0ba5f, 0x00bcd974, 0x00d5f190, 0x00e8fabb, //
    0x003e4405, 0x00666f0e, 0x00818b26, 0x0097a045, 0x00b1ba5f, 0x00cfd974, 0x00e8f190, 0x00f4fabb, //
    0x00443e05, 0x006f660e, 0x008b8126, 0x00a09745, 0x00bab15f, 0x00d9cf74, 0x00f1e890, 0x00faf4bb, //
    0x00443205, 0x006f530e, 0x008b6e26, 0x00a08645, 0x00baa05f, 0x00d9bc74, 0x00f1d590, 0x00fae8bb, //
    0x00442505, 0x006f400e, 0x008b5a26, 0x00a07445, 0x00ba8e5f, 0x00d9a874, 0x00f1c290, 0x00fadcbb, //
    0x00441905, 0x006f2d0e, 0x008b4726, 0x00a06245, 0x00ba7c5f, 0x00d99574, 0x00f1af90, 0x00facfbb, //
    0x00440d05, 0x006f1a0e, 0x008b3326, 0x00a05145, 0x00ba6b5f, 0x00d98174, 0x00f19c90, 0x00fac3bb, //
    0x00440509, 0x006f0e14, 0x008b262d, 0x00a0454b, 0x00ba5f65, 0x00d9747b, 0x00f19096, 0x00fabbbf, //
    0x00440515, 0x006f0e27, 0x008b2640, 0x00a0455c, 0x00ba5f76, 0x00d9748e, 0x00f190a9, 0x00fabbcb, //
    0x00440521, 0x006f0e3a, 0x008b2654, 0x00a0456e, 0x00ba5f88, 0x00d974a2, 0x00f190bc, 0x00fabbd7, //
    0x0044052e, 0x006f0e4d, 0x008b2667, 0x00a04580, 0x00ba5f9a, 0x00d974b5, 0x00f190cf, 0x00fabbe4, //
    0x0044053a, 0x006f0e5f, 0x008b267b, 0x00a04591, 0x00ba5fac, 0x00d974c9, 0x00f190e2, 0x00fabbf0, //
    0x00420544, 0x006c0e6f, 0x0088268b, 0x009d45a0, 0x00b75fba, 0x00d674d9, 0x00ee90f1, 0x00f8bbfa, //
    0x00360544, 0x00590e6f, 0x0074268b, 0x008c45a0, 0x00a65fba, 0x00c274d9, 0x00db90f1, 0x00ecbbfa, //
    0x002a0544, 0x00460e6f, 0x0061268b, 0x007a45a0, 0x00945fba, 0x00af74d9, 0x00c890f1, 0x00e0bbfa, //
    0x001d0544, 0x00330e6f, 0x004d268b, 0x006845a0, 0x00825fba, 0x009b74d9, 0x00b690f1, 0x00d3bbfa, //
    0x00110544, 0x00210e6f, 0x003a268b, 0x005645a0, 0x00705fba, 0x008874d9, 0x00a390f1, 0x00c7bbfa, //
};
#endif
