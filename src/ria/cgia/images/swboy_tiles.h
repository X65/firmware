static uint8_t __attribute__((aligned(4))) bitmap_data[880] = {
0x55, 0x5a, 0x6a, 0x6a, 0x6a, 0xaa, 0xaa, 0xaa, 0x55, 0x55, 0xa5, 0xa9, 0xa9, 0xaa, 0xaa, 0xaa, 0x55, 0x69, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x5a, 0x5a, 0x6a, 0x6a, 0x6a, 0xaa, 0xaa, 0xaa, 0x56, 0x5a, 0xaa, 0x6a, 0xaa, 0xaa, 0xaa, 0xaa, 0x5a, 0x56, 0x55, 0x55, 0x56, 0x56, 0x5a, 0x6a, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x95, 0x95, 0xa5, 0xaa, 0x55, 0x55, 0x55, 0x55, 0x55, 0x56, 0x5a, 0xaa, 0x55, 0x55, 0x65, 0x55, 0x95, 0xa5, 0xa5, 0xaa, 0x55, 0x55, 0x55, 0x65, 0x65, 0x69, 0xaa, 0xaa, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x95, 0xaa, 0x5a, 0x56, 0x55, 0x55, 0x56, 0x56, 0x6a, 0xaa, 0x55, 0x55, 0x55, 0x55, 0x55, 0x56, 0x5a, 0x6a, 0x55, 0x55, 0x55, 0x55, 0x55, 0xa5, 0xa9, 0xaa, 0x6a, 0x6a, 0x6a, 0x6a, 0x5a, 0x56, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x56, 0x5a, 0xaa, 0xaa, 0x00, 0x15, 0x15, 0x15, 0x14, 0x14, 0x00, 0x3f, 0x00, 0x54, 0x54, 0x54, 0x14, 0xc4, 0xf0, 0xfc, 0x56, 0x5a, 0x5a, 0x6a, 0x6a, 0x6a, 0xaa, 0xaa, 0x15, 0x85, 0xa1, 0xa1, 0xa0, 0xa0, 0x80, 0x00, 0x3f, 0x00, 0x14, 0x14, 0x15, 0x15, 0x15, 0x00, 0xfc, 0xf0, 0xc4, 0x14, 0x54, 0x54, 0x54, 0x00, 0x5a, 0x6a, 0x6a, 0x6a, 0xaa, 0xaa, 0xaa, 0x6a, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x05, 0x29, 0xa9, 0xaa, 0xaa, 0xaa, 0xa8, 0xa1, 0x55, 0x50, 0x4a, 0x2a, 0x2a, 0x2a, 0x2a, 0x48, 0x00, 0x55, 0x55, 0x55, 0x55, 0x51, 0x45, 0x44, 0x00, 0x55, 0x55, 0x55, 0x55, 0x55, 0x45, 0x15, 0x62, 0x8a, 0xaa, 0xaa, 0xaa, 0xaa, 0x6a, 0x5a, 0x05, 0x41, 0x50, 0x55, 0x55, 0x55, 0x55, 0x55, 0x76, 0x5d, 0x55, 0x54, 0x54, 0x54, 0x52, 0x4a, 0x4f, 0x4f, 0x4f, 0x4c, 0x4c, 0x4c, 0x4c, 0x4c, 0x14, 0xc4, 0xc4, 0x33, 0x33, 0xcf, 0xcc, 0xcc, 0x45, 0x04, 0x33, 0x3c, 0x3c, 0xcc, 0xcc, 0xcc, 0x55, 0x5a, 0x6a, 0x6a, 0x6a, 0xaa, 0xaa, 0xaa, 0x6a, 0x8a, 0xa2, 0xa2, 0xa2, 0xaa, 0xaa, 0xaa, 0x56, 0x51, 0x45, 0x45, 0x45, 0x55, 0x55, 0x55, 0x6a, 0x5a, 0x56, 0x56, 0x52, 0x54, 0x54, 0x54, 0x00, 0x37, 0x37, 0x37, 0x1d, 0x1d, 0x1d, 0x37, 0x00, 0xdd, 0x7d, 0x5d, 0x77, 0xfd, 0x77, 0x5d, 0x00, 0x77, 0x77, 0xd7, 0xdd, 0xdd, 0xdd, 0xd7, 0x00, 0x77, 0x77, 0xdf, 0xd7, 0x77, 0xdf, 0xdd, 0x00, 0xff, 0xdf, 0xff, 0x7f, 0xf7, 0xdf, 0x7f, 0x00, 0xcc, 0xfc, 0xf3, 0x3c, 0xfc, 0xf3, 0xf0, 0x00, 0x33, 0x33, 0xcc, 0xcc, 0xcf, 0x33, 0x33, 0x00, 0xc0, 0x30, 0x00, 0x00, 0x30, 0x00, 0x00, 0x53, 0x53, 0x53, 0x50, 0x50, 0x50, 0x50, 0x50, 0xcf, 0x0f, 0x3f, 0x3c, 0x3c, 0xcc, 0xcc, 0xcc, 0x55, 0x55, 0x95, 0xa1, 0x94, 0x55, 0x55, 0x55, 0x55, 0x55, 0x45, 0x05, 0x15, 0x55, 0x55, 0x55, 0x55, 0x15, 0x05, 0x00, 0x41, 0x55, 0x55, 0x55, 0x51, 0x41, 0x05, 0x15, 0x55, 0x55, 0x55, 0x55, 0x50, 0x40, 0x02, 0x0a, 0x16, 0x54, 0x54, 0x54, 0x37, 0x37, 0x37, 0x1d, 0x1d, 0x1d, 0x34, 0x31, 0xdd, 0x7f, 0x5d, 0x77, 0x7f, 0x77, 0xdf, 0x1f, 0xd7, 0xdd, 0xdd, 0xf7, 0x75, 0x7d, 0xdd, 0xdd, 0xff, 0x77, 0x77, 0xdf, 0xd7, 0x77, 0xdf, 0xdd, 0x7f, 0xff, 0xf7, 0x7f, 0x7f, 0xdf, 0xff, 0x7f, 0xff, 0xcc, 0xfc, 0xf3, 0xfc, 0x3c, 0xf3, 0xf0, 0x30, 0x33, 0x33, 0xc3, 0xcc, 0xf0, 0x33, 0x33, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x55, 0x15, 0x15, 0x05, 0x81, 0xa0, 0x55, 0x55, 0x55, 0x55, 0x54, 0x54, 0x41, 0x15, 0x55, 0x55, 0x55, 0x54, 0x50, 0x40, 0x01, 0x15, 0x55, 0x55, 0x55, 0x55, 0x15, 0x05, 0x40, 0x54, 0x54, 0x50, 0x50, 0x50, 0x40, 0x42, 0x02, 0x0a, 0x31, 0x31, 0x31, 0x10, 0x1c, 0x1c, 0x3f, 0x37, 0xc7, 0xcf, 0xc3, 0x01, 0x0d, 0x0d, 0x37, 0xf7, 0x00, 0x00, 0x01, 0x07, 0x07, 0x1f, 0x1f, 0x17, 0x00, 0x55, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x00, 0x55, 0x7d, 0x7d, 0x7d, 0x7d, 0x7d, 0x7d, 0x00, 0x00, 0x40, 0xd0, 0xd0, 0xf4, 0xf4, 0xf4, 0xc0, 0xc0, 0x30, 0x00, 0x30, 0x30, 0x00, 0x00, 0x4a, 0x52, 0x4a, 0x6a, 0x6a, 0x4a, 0x4a, 0x52, 0x55, 0x55, 0xf5, 0x3d, 0x4f, 0x43, 0x73, 0x53, 0x55, 0x54, 0x57, 0x53, 0x5f, 0xff, 0xf7, 0xd7, 0x55, 0xf1, 0xf1, 0xc5, 0xc5, 0x0f, 0xff, 0xff, 0x55, 0x55, 0x5f, 0x7c, 0xf1, 0xc1, 0xc5, 0xc5, 0x52, 0x4a, 0x52, 0x56, 0x56, 0x52, 0x52, 0x4a, 0x37, 0x37, 0x37, 0x1d, 0x1d, 0x1d, 0x37, 0x37, 0x77, 0x77, 0xd7, 0xfd, 0x5d, 0xd7, 0x77, 0x77, 0x13, 0x10, 0x10, 0x10, 0x11, 0x1d, 0x17, 0x1f, 0x7f, 0x00, 0x40, 0x00, 0x55, 0x7f, 0x7f, 0x7f, 0x7d, 0x00, 0x40, 0x00, 0x55, 0x7d, 0x7d, 0x7d, 0xf4, 0x04, 0x44, 0x04, 0x54, 0xf4, 0xf4, 0xf4, 0x53, 0x93, 0xa3, 0xa3, 0xa3, 0xa3, 0xa3, 0xa3, 0xf5, 0xdd, 0xd7, 0xf5, 0x77, 0xdf, 0xf5, 0xdd, 0x7c, 0xfc, 0x73, 0xfc, 0xdc, 0x73, 0xfc, 0x7f, 0xc5, 0x06, 0x0a, 0xca, 0x0a, 0x0a, 0x0a, 0x0a, 0x1d, 0x1d, 0x1d, 0x37, 0x37, 0x37, 0x1d, 0x1d, 0xf7, 0x77, 0x7d, 0xdd, 0xdd, 0xdd, 0x7d, 0x77, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x17, 0x1f, 0x11, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x55, 0x7d, 0x7d, 0x7c, 0x7c, 0x7d, 0x7d, 0x7d, 0x55, 0xf4, 0x04, 0xd0, 0x50, 0x04, 0xf4, 0xf4, 0x54, 0x53, 0x53, 0x53, 0x53, 0x4f, 0x4f, 0x3f, 0x3e, 0x05, 0x05, 0x05, 0xc5, 0x01, 0x31, 0xc0, 0xcc, 0x54, 0x54, 0x53, 0x53, 0x4e, 0x4e, 0x3f, 0x3e, 0x37, 0x77, 0x77, 0xdd, 0xdd, 0xdd, 0x77, 0x77, 0x77, 0xf7, 0x7d, 0xdd, 0xdd, 0x77, 0x77, 0x77, 0x10, 0x10, 0x10, 0x11, 0x15, 0x1f, 0x15, 0x00, 0x00, 0x40, 0x00, 0x7f, 0x7f, 0x7f, 0x55, 0x00, 0x00, 0x40, 0x00, 0x7d, 0x7d, 0x7d, 0x55, 0x00, 0x04, 0x44, 0x04, 0xf4, 0xf4, 0xf4, 0x54, 0x00, 0x15, 0x15, 0x05, 0x05, 0x01, 0x01, 0x00, 0x00, 0x45, 0x04, 0x33, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x14, 0xc4, 0xc4, 0x33, 0x33, 0x00, 0x00, 0x00, 0xcf, 0x0f, 0x3f, 0x3c, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0
};

static uint8_t __attribute__((aligned(4))) color_data[110] = {
0x07, 0x07, 0x07, 0x07, 0x07, 0xb2, 0x00, 0xb2, 0xb2, 0xb2, 0xb2, 0xb2, 0xb2, 0x07, 0x07, 0x07, 0xb2, 0x00, 0x00, 0x5c, 0x5c, 0x00, 0x00, 0x5c, 0x00, 0x5c, 0x5c, 0x00, 0x00, 0x5c, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x5c, 0x5c, 0xb2, 0xb2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x00, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x00, 0xb2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x35, 0x00, 0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 0
};

static uint8_t __attribute__((aligned(4))) bkgnd_data[110] = {
0xb2, 0xb2, 0xb2, 0xb2, 0xb2, 0x07, 0xb2, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0xb2, 0xb2, 0xb2, 0x07, 0x07, 0x07, 0xb2, 0xb2, 0x07, 0x07, 0xb2, 0x5c, 0xb2, 0xb2, 0x5c, 0x5c, 0xb2, 0x5c, 0x5c, 0xb2, 0x5c, 0x5c, 0xb2, 0xb2, 0x5c, 0x5c, 0x35, 0x07, 0x35, 0x35, 0x35, 0x00, 0x00, 0x00, 0xb2, 0x00, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x35, 0x07, 0x35, 0x35, 0x35, 0x00, 0x00, 0x00, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x35, 0x07, 0x0b, 0x0b, 0x0b, 0x0b, 0x00, 0xb2, 0x5c, 0x5c, 0x5c, 0x5c, 0x5c, 0x35, 0x07, 0x0b, 0x0b, 0x0b, 0x0b, 0x5c, 0x35, 0x35, 0x5c, 0x35, 0x07, 0x0b, 0x0b, 0x0b, 0x0b, 0xb2, 0xb2, 0xb2, 0x35, 0x07, 0x0b, 0x0b, 0x0b, 0x0b, 0xb2, 0x5c, 0x5c, 0x00, 0x00, // 0
};

static const uint16_t video_offset = 0x0000;
static const uint16_t color_offset = 0x1000;
static const uint16_t bkgnd_offset = 0x2000;
static const uint16_t chrgn_offset = 0x3000;
static const uint16_t dl_offset = 0x3800;

static uint8_t __attribute__((aligned(4))) display_list[] = {
0xF3, (video_offset & 0xFF), ((video_offset >> 8) & 0xFF),  // LMS
(color_offset & 0xFF), ((color_offset >> 8) & 0xFF),        // LFS
(bkgnd_offset & 0xFF), ((bkgnd_offset >> 8) & 0xFF),        // LBS
(chrgn_offset & 0xFF), ((chrgn_offset >> 8) & 0xFF),        // LCG
0x70, 0x70, 0x70, 0x70, 0x70,                              // 5x 8 empty background lines
0x70, 0x70, 0x70, 0x70, 0x70,                              // 5x 8 empty background lines
0x44, 0x00, 0x54, 0x1A,                                    // common background and foreground colors
0x0C, 0x0C, 0x0C, 0x0C, 0x0C,                              // 5x MODE5
0x0C, 0x0C, 0x0C, 0x0C, 0x0C,                              // 5x MODE5
0x0C, 0x0C, 0x0C, 0x0C, 0x0C,                              // 5x MODE5
0x0C, 0x0C, 0x0C, 0x0C, 0x0C,                              // 5x MODE5
0x82, (dl_offset & 0xFF), ((dl_offset >> 8) & 0xFF)  // JMP to begin of DL and wait for Vertical BLank
};

static uint8_t __attribute__((aligned(4))) tile_map[] = {
0,1,2,3,4,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,19,20, //
7,8,9,10,11,12,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,23,24,24, //
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,13,14,0,1,2,3,4,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,29,30,24, //
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,15,16,7,8,9,10,11,12,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,35,36,24,24, //
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,49,50,51,52, //
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,62,63,24,64, //
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,74,75,76,77, //
6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,17,18,6,6,6,6,6,6,6,86,87,88, //
6,6,6,6,19,20,6,6,6,6,19,20,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,21,22,6,6,6,6,6,6,6,96,87,88, //
6,6,6,23,24,24,25,6,6,23,24,24,25,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,26,27,27,28,27,28,27,28,27,28,27,28,27,28, //
6,6,6,29,30,24,31,6,6,29,30,24,31,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,32,33,34,33,34,33,34,33,34,33,34,33,34,33, //
6,6,35,36,24,24,37,38,35,36,24,24,37,38,6,6,6,6,6,6,39,40,41,42,43,44,45,46,6,6,6,6,6,6,47,48,48,48,48,48,48,48,48,48,48,48,48,48, //
6,6,49,50,51,52,24,53,49,50,51,52,24,53,6,6,6,6,6,6,54,55,56,57,58,59,60,61,6,6,6,6,6,6,32,48,48,48,48,48,48,48,48,48,48,48,48,48, //
6,6,62,63,24,64,65,66,62,63,24,64,65,66,6,6,6,6,6,6,67,68,69,70,71,72,60,73,6,6,6,6,6,6,47,48,48,48,48,48,48,48,48,48,48,48,48,48, //
6,6,74,75,76,77,78,79,74,75,76,77,78,79,6,6,6,6,6,6,80,81,82,83,84,85,60,61,6,6,6,6,6,6,32,48,48,48,48,48,48,48,48,48,48,48,48,48, //
6,6,6,86,87,88,89,6,6,86,87,88,89,6,6,6,6,6,6,6,90,91,92,93,94,95,60,73,6,6,6,6,6,6,47,48,48,48,48,48,48,48,48,48,48,48,48,48, //
6,6,6,96,87,88,97,6,6,96,87,88,97,6,6,6,6,6,6,98,99,100,101,102,103,104,60,61,105,6,6,6,6,6,32,48,48,48,48,48,48,48,48,48,48,48,48,48, //
27,28,27,28,27,28,27,28,27,28,27,28,27,28,27,28,27,28,27,28,27,28,27,28,27,28,27,28,27,28,27,28,27,28,48,48,48,48,48,48,48,48,48,48,48,48,48,48, //
106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,106,107,108,108,108,108,108,108,108,108,108,108,108,108,108,108, //
109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109, //
};

static const uint8_t border_columns = 0;
